# -*- coding: utf-8 -*-
"""ConvexHull

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nHeSJqEaD1ArSN5RzDm2g98HidgB9iPq
"""

!pip install anndata
import matplotlib.pyplot as plt
import anndata as ad
import pandas as pd
import numpy as np

def turn(p1, p2, p3):
    cross_product = (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p3[0] - p1[0]) * (p2[1] - p1[1])
    if cross_product > 0:
        return 1
    elif cross_product < 0:
        return -1
    else:
        return 0

def ConvexHull(points):
    u = list()
    l = list()

    points = sorted(points, key=lambda x: (x[0], x[1]))

    for p in points:
        while len(u) > 1 and turn(u[-2], u[-1], p) != 1:
            u.pop()
        while len(l) > 1 and turn(l[-2], l[-1], p) != -1:
            l.pop()
        u.append(p)
        l.append(p)

    return u + l[::-1][1:-1]

!wget https://datasets.cellxgene.cziscience.com/1c2d14d8-32d4-41be-b38d-ba975ad10efa.h5ad
adata = ad.read_h5ad('1c2d14d8-32d4-41be-b38d-ba975ad10efa.h5ad')

umap_coords = adata.obsm['X_UMAP']
cluster_ids = adata.obs['cluster_id']

df = pd.DataFrame(umap_coords, columns=['UMAPX', 'UMAPY'])
df['cluster_id'] = cluster_ids.values

plt.figure(figsize=(10, 8))
clusters = df['cluster_id'].unique()
colors = plt.cm.get_cmap('tab10', len(clusters))

for i, cluster in enumerate(clusters):
    points = df[df['cluster_id'] == cluster][['UMAPX', 'UMAPY']].values

    if len(points) >= 3:
        hull_points = ConvexHull(points.tolist())
        hull_points = np.array(hull_points)

        plt.plot(hull_points[:, 0], hull_points[:, 1], color=colors(i))

    plt.scatter(points[:, 0], points[:, 1], color=colors(i), s=10, label=f'Cluster {cluster}')

plt.title('Coordenadas UMAP')
plt.xlabel('UMAPX')
plt.ylabel('UMAPY')
plt.legend()
plt.show()